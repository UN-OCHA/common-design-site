<?php
/**
 * @file
 * Drupal hooks and functions for admin_denied.
 */

/**
 * Implements hook_cron().
 */
function admin_denied_cron() {
  /*
   * Generate a new random username that does not already exist. This loop
   * will exit if a generated username is NOT found.
   */
  do {
    $username = user_password(16);
  } while ((bool) db_select('users_field_data', 'u')->fields('u', ['uid'])->condition('u.uid', 0, '<>')->condition('u.name', db_like($username), 'LIKE')->range(0, 1)->execute()->fetchField());

  // Set the uid 1 username and password to random strings.
  $result = db_update('users_field_data')
    ->fields(['name' => $username, 'pass' => user_password(16)])
    ->condition('uid', 1)
    ->execute();

  // Write an entry to the watchdog log.
  if ($result) {
    \Drupal::logger('admin_denied')->notice('Randomised the username and password for user 1');
  }
  else {
    \Drupal::logger('admin_denied')->error('Failed to randomise the username and password for user 1');
  }
}
